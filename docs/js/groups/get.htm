---
layout: docs-js
title: List all group members
---
<div id="body">
<pre class="subtitle">method RunOrg.Group.List</pre><p>If <code>group</code> is an instance of <a href="/docs/js/people/group.htm"><code>RunOrg.Group</code></a>, then <code>group.List(limit,offset)</code> returns all the <a href="/docs/js/people.htm">people</a> in the specified group, in arbitrary order. Supports <code>limit</code> and <code>offset</code> pagination.</p>
<p>Returns a <a href="/docs/js/concepts/promise.htm">promise</a> that will resolve to an array of <a href="/docs/js/people/person.htm">short profiles</a>.</p>


<p class="caption">Example usage</p><pre class="js">
new RunOrg.Group("1ax69bfa335").List(10,0).then(function(list) { 
  for (var i = 0; i < list.length; ++i)     
    console.log("Found person %s.", list[i].label)
})
</pre>

<h1> Errors</h1>
<h2> Returns <code>401 Unauthorized</code></h2>
<ul>
  <li> if the provided token does not allow acting as the viewer.</li>
</ul><h2> Returns <code>403 Forbidden</code></h2>
<ul>
  <li> if the viewer does not have <b>list</b> access to the group.</li>
</ul><h2> Returns <code>404 Not Found</code></h2>
<ul>
  <li> if the database does not exist,</li>
  <li> if group <code>{id}</code> does not exist in the database.</li>
  <li> if the viewer does not have at least <b>view</b> access to the group, to ensure <a href="/docs/js/concepts/absence-equivalence.md">absence equivalence</a>.</li>
</ul><h1> Access restrictions</h1>
<p>Viewing group members requires <b>list</b> access to that group.</p>

</div>
<nav><ul class="above"><li><a href="/docs/js/index.htm">RunOrg documentation</a></li><li><a href="/docs/js/groups.htm">Groups</a></li></ul><span class="active">List all group members</span></nav>