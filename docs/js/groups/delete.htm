---
layout: docs-js
title: Delete a group
---
<div id="body">
<pre class="subtitle">method RunOrg.Group.Delete</pre><p><code>group.Delete()</code> removes <code>group</code> from the database forever. The people remain in the database, but their membership (to the deleted group) is forgotten.</p>


<h1> Examples</h1>


<p class="caption">Example request</p><pre class="js">
var group = new RunOrg.Group("0SNQe0032JZ");
group.Delete().then(function() {
  console.log("Group deleted!");
});
</pre>

<h1> Errors</h1>
<h2> Returns <code>401 Unauthorized</code></h2>
<ul>
  <li> if the provided token does not allow acting as <code>{as}</code></li>
</ul><h2> Returns <code>403 Forbidden</code></h2>
<ul>
  <li> if person <code>{as}</code> does not have at least <b>admin</b> access to group <code>{id}</code></li>
  <li> when attempting to delete group <a href="/docs/js/groups/admin.htm"><code>admin</code></a></li>
</ul><h2> Returns <code>404 Not Found</code></h2>
<ul>
  <li> if database <code>{db}</code> does not exist</li>
  <li> if group <code>{id}</code> does not exist in database <code>{db}</code></li>
  <li> if person <code>{as}</code> does not have at least <b>view</b> access to group <code>{id}</code>, to ensure <a href="/docs/js/concepts/absence-equivalence.htm">absence equivalence</a></li>
</ul><h1> Access restrictions</h1>
<p>The <b>admin</b> <a href="/docs/js/groups/audience.htm">access level</a> is required to delete a group. The <a href="/docs/js/groups/admin.htm"><code>admin</code></a> group may not be deleted.</p>

</div>
<nav><ul class="above"><li><a href="/docs/js/index.htm">RunOrg documentation</a></li><li><a href="/docs/js/groups.htm">Groups</a></li></ul><span class="active">Delete a group</span></nav>