---
layout: docs-js
title: Remove members from a group
---
<div id="body">
<pre class="subtitle">method RunOrg.Group.RemoveMany</pre><p><code>group.RemoveMany([person,person])<code> removes the provided array of people frp√π </code>group<code>. It returns a <a href="/docs/js/concepts/promise.htm">promise</a> which resolves once the server has acknowledged the request.</p>
<p>The people must be provided as identifiers.</p>
<p>This method silently ignores people who do not exist or are not members of the group.</p>


<h1> Examples</h1>


<p class="caption">Example request</p><pre class="js">
var group = new RunOrg.Group("0SNQe0032JZ");
group.RemoveMany(["0SNQe00311H", "0SNQg00511H"]).then(function() {
  console.log("Members removed!");
});
</pre>

<h1> Errors</h1>
<h2> Returns <code>401 Unauthorized</code></h2>
<ul>
  <li> if the provided token does not allow acting as <code>{as}</code></li>
</ul><h2> Returns <code>403 Forbidden</code></h2>
<ul>
  <li> if person <code>{as}</code> does not have at least <b>moderate</b> access to group <code>{id}</code></li>
</ul><h2> Returns <code>404 Not Found</code></h2>
<ul>
  <li> if database <code>{db}</code> does not exist</li>
  <li> if group <code>{id}</code> does not exist in database <code>{db}</code></li>
  <li> if person <code>{as}</code> does not have at least <b>view</b> access to group <code>{id}</code>, to ensure <a href="/docs/js/concepts/absence-equivalence.htm">absence equivalence</a></li>
</ul><h1> Access restrictions</h1>
<p>The <b>moderate</b> <a href="/docs/js/groups/audience.htm">access level</a> is required to remove members from a group.</p>

</div>
<nav><ul class="above"><li><a href="/docs/js/index.htm">RunOrg documentation</a></li><li><a href="/docs/js/groups.htm">Groups</a></li></ul><span class="active">Remove members from a group</span></nav>