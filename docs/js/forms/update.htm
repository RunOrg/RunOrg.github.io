---
layout: docs-js
title: Update form meta-data
---
<div id="body">
<pre class="subtitle">method RunOrg.Form.Save</pre><p>If <code>form</code> is an instance of <a href="/docs/js/forms/form.htm"><code>RunOrg.Form</code></a>, then <code>form.Save()</code> uploads its non-<code>id</code> fields to the server.</p>
<p>Returns a <a href="/docs/js/concepts/promise.htm">promise</a> that will resolve to the <code>form</code> object.</p>


<p class="caption">Example usage</p><pre class="js">
new RunOrg.Form("1ax69bfa335").Load().then(function(form) {     
  form.label = "This is my new label !";
  return form.Save();
}).then(function(form) {  
  console.log("Updated label to %s.", form.label)
})
</pre>

<p><b>Note</b>: it is not necessary to <code>Load()</code> the form first.</p>
<p><b>Note</b>: if a form has already been filled (even if only once), the list of fields may not be updated anymore (though other properties can).</p>
<p>The following properties are sent to the server:</p>


<table class="fields"><tr><td class="code"><code>label</code></td><td class="code"><code>&lt;label>, null</code></td><td><p>An optional human-readable name.</p>
</td></tr><tr><td class="code"><code>custom</code></td><td class="code"><code>&lt;json></code></td><td><p>An arbitrary block of JSON that will be stored as-is by RunOrg and returned as such by the API.</p>
</td></tr><tr><td class="code"><code>owner</code></td><td class="code"><code>&lt;owner></code></td><td><p>The nature of the owners associated with each filled instance of the form. In the current version of the API, this is always <code>&quot;person&quot;</code> (each instance is owned by a person).</p>
</td></tr><tr><td class="code"><code>fields</code></td><td class="code"><code>&lt;field> array</code></td><td><p>An ordered list of <a href="/docs/js/forms/field.htm">fields</a> to be filled.</p>
</td></tr><tr><td class="code"><code>audience</code></td><td class="code"><code>&lt;audience></code></td><td><p>The <a href="/docs/js/forms/audience.htm">audience</a> of the form.</p>
</td></tr></table>

<h1> Errors</h1>
<h2> Returns <code>400 Bad Request</code></h2>
<ul>
  <li> if a mandatory property is missing.</li>
  <li> if a field is badly configured.</li>
</ul><h2> Returns <code>401 Unauthorized</code></h2>
<ul>
  <li> if the provided token does not allow acting as <code>{as}</code>.</li>
</ul><h2> Returns <code>403 Forbidden</code></h2>
<ul>
  <li> if the requester does not have <b>admin</b> access to the form.</li>
</ul><h2> Returns <code>404 Not Found</code></h2>
<ul>
  <li> if the database does not exist,</li>
  <li> if form <code>{id}</code> does not exist in the database,</li>
  <li> if person <code>{as}</code> does not have at least <b>fill</b> access to form <code>{id}</code>, to ensure <a href="/docs/js/concepts/absence-equivalence.md">absence equivalence</a>.</li>
</ul><h1> Access restrictions</h1>
<p>An <a href="/docs/js/forms/audience.htm">access level</a> of <b>admin</b> is required to update form information.</p>

</div>
<nav><ul class="above"><li><a href="/docs/js/index.htm">RunOrg documentation</a></li><li><a href="/docs/js/forms.htm">Forms</a></li></ul><span class="active">Update form meta-data</span></nav>