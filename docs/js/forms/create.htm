---
layout: docs-js
title: Create a form
---
<div id="body">
<pre class="subtitle">method RunOrg.Form.Create</pre><p>If <code>form</code> is an instance of <code>RunOrg.Form</code> that does not represent a server-side form (that is, you created and set its fields locally), then <code>form.Create()</code> will attempt to create a new server-side form from the data in this object.</p>
<p>Returns a <a href="/docs/js/concepts/promise.htm">promise</a> that will resolve to the <code>form</code> instance.</p>
<p>The following fields are expected:</p>


<table class="fields"><tr><td class="code"><code>id</code></td><td class="code"><code>&lt;id>, null</code></td><td><p>The identifier of the form in the database. If provided, the request is performed in <b>force-id</b> mode (see below), otherwise it is performed in <b>generate-id</b> mode.</p>
</td></tr><tr><td class="code"><code>label</code></td><td class="code"><code>&lt;label>, null</code></td><td><p>An optional human-readable label.</p>
</td></tr><tr><td class="code"><code>custom</code></td><td class="code"><code>&lt;json></code></td><td><p>An optional, arbitrary block of JSON that will be stored by RunOrg and returned as-is by the API.</p>
</td></tr><tr><td class="code"><code>owner</code></td><td class="code"><code>"person"</code></td><td><p>The nature of the owners associated with each filled instance. In the current version of the API, this is always <code>&quot;person&quot;</code>.</p>
</td></tr><tr><td class="code"><code>fields</code></td><td class="code"><code>&lt;field> array</code></td><td><p>An ordered list of <a href="/docs/js/forms/field.htm">fields</a> to be filled.</p>
</td></tr><tr><td class="code"><code>audience</code></td><td class="code"><code>&lt;audience>, null</code></td><td><p>The initial audience of the form. See <a href="/docs/js/forms/audience.htm">audience and access</a> for more information.</p>
</td></tr></table>

<p>The behaviour of the request depends on whether an identifier was provided: <b>force-id</b> mode or <b>generate-id</b> mode.</p>
<h1> Force-id mode</h1>
<p>RunOrg will attempt to create aform with that identifier, and do nothing if the form already exists (<a href="/docs/js/concepts/idempotent.htm">idempotent</a> request).</p>
<h1> Generate-id mode</h1>
<p>RunOrg will create brand new form, with a brand new identifier. Running the request again with the same parameters will create another form.</p>


<h1> Errors</h1>
<h2> Returns <code>400 Bad Request</code></h2>
<ul>
  <li> if the provided identifier is not a valid <a href="/docs/js/concepts/custom-id.htm">custom identifier</a></li>
</ul><h2> Returns <code>401 Unauthorized</code></h2>
<ul>
  <li> if the provided token does not match the requester.</li>
</ul><h2> Returns <code>403 Forbidden</code></h2>
<ul>
  <li> if the requester is not allowed to create forms.</li>
</ul><h2> Returns <code>404 Not Found</code></h2>
<ul>
  <li> if the database does not exist</li>
</ul><h2> Returns <code>409 Conflict</code></h2>
<ul>
  <li> if a form already exists with the provided identifier.</li>
</ul><h1> Access restrictions</h1>
<p>Only <a href="/docs/js/groups/admin.htm">database administrators</a> can create new forms.</p>

</div>
<nav><ul class="above"><li><a href="/docs/js/index.htm">RunOrg documentation</a></li><li><a href="/docs/js/forms.htm">Forms</a></li></ul><span class="active">Create a form</span></nav>